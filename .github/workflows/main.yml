name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Test backend
      run: |
        cd backend
        python -c "import app.main; print('Backend imports successfully')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to EC2
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        
        # Create target directory on EC2
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST }} "mkdir -p /tmp/fusionpact-update"
        
        # Copy files to EC2
        scp -o StrictHostKeyChecking=no -i private_key.pem -r . ubuntu@${{ secrets.EC2_HOST }}:/tmp/fusionpact-update/
        
        # Deploy on EC2
        ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          # Stop current services
          cd /home/ubuntu/fusionpact-devops-challenge
          sudo docker-compose down
          
          # Update code
          cp -r /tmp/fusionpact-update/* /home/ubuntu/fusionpact-devops-challenge/
          
          # Rebuild and restart services
          sudo docker-compose build --no-cache
          sudo docker-compose up -d
          
          # Cleanup
          rm -rf /tmp/fusionpact-update
          
          # Verify deployment
          sleep 10
          curl -f http://localhost || echo "Frontend check failed"
          curl -f http://localhost:8000 || echo "Backend check failed"
        EOF
